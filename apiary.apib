FORMAT: 1A
HOST: https://api2.frontapp.com/

# Front

# Group Token identity
## Token Identity [/me]

### Get token identity [GET]

Fetches the details of the API token

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/me` (string, required)
        + id: `cmp_55c8c149` (string, required) - ID of the company the token has been issued for.
        + name: `Planet express` (string, required) - Name of the company the token has been issued for.


# Group Teams
## Teams [/teams/{team_id}]

### List teams [GET /teams]

List the teams in your company.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/teams` (string, required)
        + _results (array[Team], required) - List of teams accessible by the token

### Get team [GET]

Fetches the details of a team.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Team details)


# Group Teammates
## Teammates [/teammates/{teammate_id}]

A teammate is a Front user, a member of your company.

A teammate can be available or not (determined by the boolean `is_available`). When a conversation is assigned to an unavailable teammate, to avoid it to be hidden from the other teammates, it gets unassigned automatically.

<aside class="notice">
You can use the teammate email address as an alias for its ID.<br>
A teammate ID alias follows the pattern <code>alt:email:{email address}</code>.
</aside>

+ Parameters
    + teammate_id (string, required) - Id or email of the requested teammate

+ Attributes (Teammate)

### List team [GET /teammates]

Lists the teammates in your company.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/teammates` (string, required)
        + _results (array[Teammate], required) - List of all the teammates in your company

### Get teammate [GET]

Fetches the information of a teammate. See [resource aliases](#resource-aliases) to fetch by email.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Teammate, required)

### Update teammate [PATCH]

Updates the information of a teammate.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Teammate to update)

+ Response 204

### List teammate conversations [GET /teammates/{teammate_id}/conversations{?q,page_token,limit}]

Lists the conversations assigned to a teammate in reverse chronological order (most recently updated first).

+ Parameters
    + teammate_id (string, required) - Id or email of the teammate
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/teammates/tea_55c8c149/conversations` (string, required)
        + _results (array[Conversation], required) - List of the teammate's conversations


# Group Inboxes
## Inboxes [/inboxes/{inbox_id}]

An inbox is a container of messages.

Messages are sent from and received by [channels](#channels) which then post the messages into the configured inbox. An inbox can have multiple channels.

+ Parameters
    + inbox_id (string, required) - Id of the requested inbox

+ Attributes (Inbox)

### List inboxes [GET /inboxes]

Lists all the inboxes.

<aside class="notice">
You can list the inboxes of a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/inboxes</code> or <code>/teams/{team_id}/inboxes</code>.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/inboxes` (string, required)
        + _results (array[Inbox], required) - List of all your inboxes

### Create an inbox [POST /inboxes]

Creates a team inbox with no channel associated to it (see [Create a channel](#create-a-channel)) in the default team.

<aside class="notice">
You can create an inbox for a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/inboxes</code> or <code>/teams/{team_id}/inboxes</code>.
</aside>

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Inbox to create)

+ Response 201 (application/json)
    + Attributes (Created inbox)

### Get inbox [GET]

Fetches the information of an inbox.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Inbox)

### List inbox channels [GET /inboxes/{inbox_id}/channels]

Lists the channels linked to an inbox.

+ Parameters
    + inbox_id (string, required) - Id of the requested inbox

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/inboxes/inb_55c8c149/channels` (string, required)
        + _results (array[Channel], required) - List of channels

### List inbox conversations [GET /inboxes/{inbox_id}/conversations{?q,page_token,limit}]

Lists the conversations which appear in an inbox.

+ Parameters
    + inbox_id (string, required) - Id of the requested inbox
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/inboxes/inb_55c8c149/conversations` (string, required)
        + _results (array[Conversation], required) - List of the conversations

### List inbox teammates [GET /inboxes/{inbox_id}/teammates]

Lists the teammates who can access an inbox.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/inboxes/inb_55c8c149/teammates` (string, required)
        + _results (array[Teammate], required) - List of teammates


# Group Channels
## Channels [/channels/{channel_id}]

A channel is a resource which can send and receive messages.

Here is the list of existing channel types:

| Type        | Description                                                                                |
|-------------|--------------------------------------------------------------------------------------------|
| `smtp`      | For emails managed via SMTP.                                                               |
| `imap`      | For emails managed via IMAP.                                                               |
| `twilio`    | Linked to a Twilio account.                                                                |
| `twitter`   | Linked to a Twitter account.                                                               |
| `facebook`  | Linked to a Facebook page.                                                                 |
| `smooch`    | Linked to a Smooch account.                                                                |
| `intercom`  | Linked to an Intercom account.                                                             |
| `truly`     | Linked to a truly account.                                                                 |
| `custom`    | For messages sent and received only through the API (cf [Custom inboxes](#custom-inboxes)).|

+ Parameters
    + channel_id (string, required) - Id of the requested channel

+ Attributes (Channel)

### List channels [GET /channels]

Lists all the channels.

<aside class="notice">
You can list the channels of a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/channels</code> or <code>/teams/{team_id}/channels</code>.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/channels` (string, required)
        + _results (array[Channel], required) - List of channels

### Get a channel [GET]

Fetches the information of a channel. See [resource aliases](#resource-aliases) to fetch by address.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Channel)

### Update a channel [PATCH]

Updates the settings of a channel.

<aside class="notice">
As of today, you can only update the settings of a <a href="#custom-channels">custom channel</a> with the API.
</aside>

`reply_mode` can be one of: `same_channel` (channel can only reply to messages within the same channel) or `unsupported` (channel cannot reply to any messages) (Default: `same_channel`)

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Channel to update)

+ Response 204

### Create a channel [POST /inboxes/{inbox_id}/channels]

Creates a channel linked to the requested inbox.

<aside class="notice">
As of today, you can only create a <a href="#custom-channels">custom channel</a> with the API.
</aside>

`reply_mode` can be one of: `same_channel` (channel can only reply to messages within the same channel) or `unsupported` (channel cannot reply to any messages) (Default: `same_channel`)

+ Parameters
    + inbox_id (string, required) - Id of the inbox into which the channel messages will go.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Channel to create)

+ Response 201 (application/json)
    + Attributes (Channel created)


# Group Conversations
## Conversations [/conversations/{conversation_id}]

A conversation is a unique thread of messages. It can appear in one or more inboxes (eg: if you receive an email on contact@ where support@ is Cced).

Even if a conversation messages can have multiple recipients, the conversation resource will always have only one. The main recipient of a conversation can change over the time depending on each message received. It will generally be the sender of the last incomming message.

### Opening a conversation in Front

To open a conversation in Front you need to open the URL `https://app.frontapp.com/open/{conversation_id}`.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Attributes (Conversation)

### List conversations [GET /conversations{?q,page_token,limit}]

Lists all the conversations in your company in reverse chronological order (most recently updated first).

+ Parameters
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/conversations` (string, required)
        + _results (array[Conversation], required) - Array of the conversations

### Get conversation [GET]

Fetches the information of a conversation.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Conversation)

### Update conversation [PATCH]

Updates a conversation. You can:

* Assign or unassign a conversation by sending an `assignee_id`
* Update the tags of a conversation by sending an array of tag IDs, `tag_ids`. An empty array will remove all tags.
* Archive a conversation by sending `archived` in `status`
* Delete a conversation by sending `deleted` in `status`
* Mark a conversation as spam by sending `spam` in `status`
* Unarchive or restore a conversation  by sending `open` in `status`

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Conversation to update)

+ Response 204

### Update conversation assignee [PUT /conversations/{conversation_id}/assignee]

Updates a conversation's assignee.

* Assign or unassign a conversation by sending an `assignee_id`

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Conversation to put)

+ Response 204

### List conversation inboxes [GET /conversations/{conversation_id}/inboxes]

Lists the inboxes in which a conversation appears.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/inboxes` (string, required)
        + _results (array[Inbox], required) - List of the conversation inboxes

### List conversation followers [GET /conversations/{conversation_id}/followers]

Lists the teammates following a conversation.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/followers` (string, required)
        + _results (array[Teammate], required) - List of the conversation followers

### List conversation events [GET /conversations/{conversation_id}/events{?page_token,limit}]

List of all the events that occured for a conversation in reverse chronological order (newest first).

+ Parameters
     + page_token (string, optional) - Token to use to request the next page
     + limit (number, optional) - Max number of results per page (default 50, maximum 100)
     
     + conversation_id (string, required) - Id of the requested conversation

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/events` (string, required)
        + _results (array[Event], required) - List of the conversation activities

### List conversation messages [GET /conversations/{conversation_id}/messages{?page_token,limit}]

Lists all the messages sent or received in a conversation in reverse chronological order (newest first).

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/messages` (string, required)
        + _results (array[Message], required) - List of the conversation messages

## Comments [/conversations/{conversation_id}/comments]

A comment is a private message written by a teammate visible only to the other teammates. It is never sent and cannot be shared outside of Front.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Attributes (Comment)

### Create comment [POST]

Adds a comment to a conversation.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Comment to create)

+ Response 201 (application/json)
    + Attributes (Comment)

### List conversation comments [GET]

Lists of all the comments written in a conversation in reverse chronological order (newest first).

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/comments` (string, required)
        + _results (array[Comment], required) - List of comments


### Get comment [GET /comments/{comment_id}]

Fetches the information of a comment.

+ Parameters
    + comment_id (string, required) - Id of the comment

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Comment)

### List comment mentions [GET /comments/{comment_id}/mentions]

Lists the teammates mentionned in a comment.

+ Parameters
    + comment_id (string, required) - Id of the comment

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/comments/com_55c8c149/mentions` (string, required)
        + _results (array[Teammate], required) - List of teammates


# Group Custom fields
## Custom fields [/custom_fields/{custom_field_id}]

A custom field defines the name and type for an extra field of a contact. Only listing all fields and updating the name and/or the description of a custom field is allowed. If you need a custom field to change its type, you need to create a new one with the correct type, as we validate the value of a custom field based on its type.

Each custom field has a specified data type. Ensure the data you submit when updating a custom field's value is formatted correctly:

| Type     | Example        | Description               |
|----------|----------------|---------------------------|
| String   | `"London, UK"` | String values             |
| Boolean  | `true`         | Boolean true/false values |
| Number   | `90`           | Integers                  |
| Datetime | `1525417200`   | Epoch timestamp           |

### List custom fields [GET /custom_fields]

List all the custom fields in your company.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/custom_fields` (string, required)
        + _results (array[Custom field], required) - Array of the custom fields

### Update a custom field [PATCH]

Updates the name and/or description of a custom field.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Custom field to update)

+ Response 204


# Group Messages
## Messages [/messages/{message_id}]

A message is a resource which can be either received or sent via an inbox. Messages are grouped by conversations.

A message can be either inbound (received) or outbound (sent). You can know if a message has been received or sent thanks to the boolean `is_inbound`.

Each message has a type depending on the channel it has been sent with:

| Type name    | Description                        |
|--------------|------------------------------------|
| `email`      | Email message                      |
| `tweet`      | Message from Twitter               |
| `sms`        | SMS message                        |
| `smooch`     | Message from Smooch                |
| `facebook`   | Message from Facebook              |
| `intercom`   | Message from Intercom              |
| `call`       | Phone call                         |
| `custom`     | [Custom message](#custom-channels) |

### Opening a message in Front

To open a message in Front you need to open the URL `https://app.frontapp.com/open/{message_id}`.

+ Parameters
    + message_id (string, required) - Id of the requested message

+ Attributes (Message)

### Get message [GET]

Fetches the information of a message.

<aside class="notice">
You can request the source of a message by setting the <code>Accept</code> header to <code>"text/plain"</code>.<br />
Fetching the source of a message is available for email messages only.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Message)

### Send new message [POST /channels/{channel_id}/messages]

Sends a new message from a channel. It will create a new conversation.

If you want to send a new message with attached files, please check [how to send multipart request](#send-multipart-request).

+ Parameters
    + channel_id (string, required) - Id or address of the channel from which to send the message

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Outbound new message)

+ Response 202 (application/json)

    + Attributes (Draft)

### Send reply [POST /conversations/{conversation_id}/messages]

Replies to a conversation by sending a message and appending it to the conversation.

If you want to send a reply with attached files, please check [how to send multipart request](#send-multipart-request).

+ Parameters
    + conversation_id (string, required) - Id of the conversation

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Outbound reply)

+ Response 202 (application/json)

    + Attributes (Draft)

### Receive custom message [POST /channels/{channel_id}/incoming_messages]

Receives a custom message in Front. This endpoint is available for [custom channels](#custom-channels) **ONLY**.

If you want to receive a custom message with attached files, please check [how to send multipart request](#send-multipart-request).

<aside class="notice">
Receiving a message in Front is done asynchronously. <br>
The endpoint will only validate the payload and will return a <code>message_uid</code> that can be used as an alias for the message ID (<code>alt:uid:{message_uid}</code>.
<br><br>
We guarantee that the UID will refer to a message but we don't guarantee that the message already exists. The API might respond with a 404 error code if trying to use the UID before the message is effectively created.
</aside>

+ Parameters
    + channel_id (string, required) - Id of the requested custom channel

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Custom message)

+ Response 202 (application/json)

    + Attributes (Accepted message)

### Import message [POST /inboxes/{inbox_id}/imported_messages]

Appends a new message into an inbox.

If you want to import a message with attached files, please check [how to send multipart request](#send-multipart-request).

<aside class="notice">
Importing a message in Front is done asynchronously. <br>
The endpoint will only validate the payload and will return a <code>message_uid</code> that can be used as an alias for the message ID (<code>alt:uid:{message_uid}</code>.
<br><br>
We guarantee that the UID will refer to a message but we don't guarantee that the message already exists. The API might respond with a 404 error code if trying to use the UID before the message is effectively created.
</aside>

<aside class="warning">
Imported messages will <strong>NOT</strong> be linked to any channel until a reply is sent. When replying to a conversation with no channels, you <strong>MUST</strong> choose from which channel to send the message.
</aside>

+ Parameters
    + inbox_id (string, required) - Id of the inbox into which the message should be append.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Message to import)

+ Response 202 (application/json)

    + Attributes (Accepted message)


# Group Contacts
## Contacts [/contacts/{contact_id}]

A contact is a person/entity with whom you have communicated.

A contact has several handles to send messages to it. A handle has a source to identify which inbox can send message to this contact:

| Source     | Description                                                           | Example of handle       |
|------------|-----------------------------------------------------------------------|-------------------------|
| `email`    | An email address                                                      | `calculon@pmomsbot.com` |
| `phone`    | A phone number                                                        | `+123445678900 `        |
| `twitter`  | A twitter handle                                                      | `@calculon`             |
| `facebook` | A Facebook user ID                                                    |                         |
| `intercom` | An Intercom user ID                                                   |                         |
| `smooch`   | A Smooch user ID                                                      |                         |
| `custom`   | Custom handle provided in the [API endpoint](#receive-custom-message) |                         |

Each pair handle/source is unique. If you want to move an existing handle from one contact to an other, you need to delete it from the first one and add it to the other one.

<aside class="notice">
You can use a contact source/handle pair as an alias for its ID.<br>
A contact ID alias follows the pattern <code>alt:{source}:{handle}</code>.
</aside>

+ Parameters
    + contact_id (string, required) - Id or alias of the requested contact

+ Attributes (Contact)

### List contacts [GET /contacts{?q,page_token,limit,sort_by,sort_order}]

List all the contacts.

<aside class="notice">
You can list the contacts of a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/contacts</code> or <code>/teams/{team_id}/contacts</code>.
</aside>

+ Parameters
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    
    + sort_by (string, optional) - Field to use to sort the contacts.
    + sort_order (string, optional) - Order by which the results should be sorted. Accepted values are `desc` or `asc` (Defaults to `desc`)

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/contacts` (string, required)
        + _results (array[Contact], required) - List of the contacts in your company

### Get contact [GET]

Fetches the information of a contact. See [resource aliases](#resource-aliases) to fetch by handle.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Contact)

### Update contact [PATCH]

Updates a contact information.

If you want to update a contact's avatar, please check [how to send multipart request](#send-multipart-request).

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact to update, required)

+ Response 204 (application/json)

### Create contact [POST /contacts]

Creates a new contact for the default team.

<aside class="notice">
You can create a contact for a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/contacts</code> or <code>/teams/{team_id}/contacts</code>.
</aside>

If you want to create a contact with an avatar, please check [how to send multipart request](#send-multipart-request).
If your request includes custom field attributes, datetime fields **MUST** be sent as a timestamp, in seconds.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact to create, required)

+ Response 201 (application/json)
    + Attributes (Contact)


### Delete contact [DELETE]

Deletes a contact.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 204 (application/json)

### List contact conversations [GET /contacts/{contact_id}/conversations{?q,page_token,limit}]

Lists all the conversations with a contact in reverse chronological order (most recently updated first).

+ Parameters
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/contacts/crd_55c8c149/conversations` (string, required)
        + _results (array[Conversation], required) - List of the contact's conversations

## Contact groups [/contact_groups]

+ Attributes (Contact group)

### List groups [GET]

Lists all the contact groups.

<aside class="notice">
You can list the contact groups of a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/contact_groups</code> or <code>/teams/{team_id}/contact_groups</code>.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/contact_groups` (string, required)
        + _results (array[Contact group], required) - List of the contacts in the requested group

### Create group [POST]

Creates a new contact group in the default team.

<aside class="notice">
You can create a contact group for a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/contact_groups</code> or <code>/teams/{team_id}/contact_groups</code>.
</aside>

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact group to create)

+ Response 201 (application/json)
    + Attributes (Contact group)

### Delete group [DELETE /contact_groups/{group_id}]

Deletes a contact group. Will **not** delete the contacts in this group.

+ Parameters
    + group_id (string, required) - Id of the requested group

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 204

### List contacts in a group [GET /contact_groups/{group_id}/contacts{?page_token,limit}]

Lists all the contacts belonging to the requested group.

+ Parameters
    + group_id (string, required) - Id of the requested group
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/contact_groups/grp_55c8c149/contacts` (string, required)
        + _results (array[Contact], required) - List of the contacts in the requested group

### Add contacts in a group [POST /contact_groups/{group_id}/contacts]

Adds a list of contacts in the requested group

+ Parameters
    + group_id (string, required) - Id of the requested group

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact IDs)

+ Response 204

## Contact handles [/contacts/{contact_id}/handles]

+ Parameters
    + contact_id (string, required) - Id or alias of the requested contact

+ Attributes (Contact handle)

### Add contact handle [POST]

Adds a new handle/source to a contact.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact handle)

+ Response 204

### Delete contact handle [DELETE]

Removes a handle/source from a contact.

If the handle is the last handle of the contact, the API will return a 400 HTTP status code error.

<aside class="warning">
Setting <code>force</code> to true will delete the contact if the handle to delete is the last one of the contact.
</aside>

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact handle to delete)

+ Response 204

## Contact notes [/contacts/{contact_id}/notes]

+ Parameters
    + contact_id (string, required) - Id or alias of the requested contact

+ Attributes (Contact note)

### List contact notes [GET]

Lists the notes added to a contact.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/contacts/crd_55c8c149/notes` (string, required)
        + _results (array[Contact note], required) - List of the note for the requested contact

### Add a note [POST]

Adds a new note to a contact.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Contact note to create)

+ Response 201 (application/json)
    + Attributes (Contact note)


# Group Tags
## Tags [/tags/{tag_id}]

A tag is a label that can be used to classify conversations.

A tag has an optional `highlight` field which represents the color to highlight the tag with in Front.  
Supported values for highlight colors are:

| Color Preview                                      | Color value  |
|----------------------------------------------------|--------------|
| ![#](https://placehold.it/15/9b9c9e/000000?text=+) | `grey`       |
| ![#](https://placehold.it/15/ff338f/000000?text=+) | `pink`       |
| ![#](https://placehold.it/15/ff4433/000000?text=+) | `red`        |
| ![#](https://placehold.it/15/ff901a/000000?text=+) | `orange`     |
| ![#](https://placehold.it/15/facc25/000000?text=+) | `yellow`     |
| ![#](https://placehold.it/15/14cc52/000000?text=+) | `green`      |
| ![#](https://placehold.it/15/2bd5ff/000000?text=+) | `light-blue` |
| ![#](https://placehold.it/15/367fee/000000?text=+) | `blue`       |
| ![#](https://placehold.it/15/a238ff/000000?text=+) | `purple`     |

Tags can have a parent - child relationship with other tags.

+ Parameters
    + tag_id (string, required) - ID of the requested tag

+ Attributes (Tag)

### List tags [GET /tags]

Lists all the tags.

<aside class="notice">
You can list the tags of a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/tags</code> or <code>/teams/{team_id}/tags</code>.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/tags` (string, required)
        + _results (array[Tag], required) - List of the tags available in your company

### Create tag [POST /tags]

Creates a new tag in the default team.

<aside class="notice">
You can create a tag for a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/tags</code> or <code>/teams/{team_id}/tags</code>.
<br>
You can create a child tag for a specific tag by using the endpoint <code>/tags/{tag_id}/children</code>.
</aside>

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Tag to create)

+ Response 201 (application/json)
    + Attributes (Tag)

### Get tag [GET]

Fetches the information of a tag.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Tag)

### Update tag [PATCH]

Updates a tag.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Tag to update)

+ Response 204

### Delete tag [DELETE]

Deletes a tag.

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 204 (application/json)

### List tag conversations [GET /tags/{tag_id}/conversations{?q,page_token,limit}]

Lists all the conversations tagged with a specific tag.

+ Parameters
    + tag_id (string, required) - ID of the requested tag
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/tags/tag_55c8c149/conversations` (string, required)
        + _results (array[Conversation], required) - List of the tag's conversations

### List tag children [GET /tags/{tag_id}/children]

Lists the first level of children of the requested tag.

+ Parameters
    + tag_id (string, required) - ID of the requested tag

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/tags/tag_55c8c149/children` (string, required)
        + _results (array[Tag], required) - List of the child tags

### Create child tag [POST /tags/{tag_id}/children]

Creates a new child tag for the given tag.

+ Parameters
    + tag_id (string, required) - ID of the requested tag

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Tag to create)

+ Response 201 (application/json)
    + Attributes (Tag)


# Group Topics
## Topics [/topics/{topic_id}]

A topic is a specific kind of tag that links to an external platform.

+ Parameters
    + topic_id (string, required) - ID of the requested topic

+ Attributes (Topic)

### List topic conversations [GET /topics/{topic_id}/conversations{?q,page_token,limit}]

Lists all the conversations linked to a specific topic.

+ Parameters
    + topic_id (string, required) - ID of the requested topic
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/topics/top_55c8c149/conversations` (string, required)
        + _results (array[Conversation], required) - List of the topic's conversations


# Group Rules
## Rules [/rules/{rule_id}]

A rule is a set of conditions which will trigger automatic actions when they are met.

Since the set of conditions and actions associated to a rule can be quite complicated, the API exposes a human readable version of those.

+ Parameters
    + rule_id (string, required) - ID of the requested rule

+ Attributes (Rule)

### List rules [GET /rules]

Lists all the rules.

<aside class="notice">
You can list the rules of a specific teammate or team by using the endpoints <code>/teammates/{teammate_id}/rules</code> or <code>/teams/{team_id}/rules</code>.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/rules` (string, required)
        + _results (array[Rule], required) - List of the rules in your company

### Get rule [GET]

Fetches the definition of a rule.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Rule)


# Group Events
## Events [/events/{event_id}]

An event is created everytime something interesting is happenning in Front. You'll find in the table bellow the description of all the types of event that exist:

| Type                  | Description                                    | Source types         | Target types                |
|-----------------------|------------------------------------------------|----------------------|-----------------------------|
| `assign`              | When a conversation is assigned to a teammate  | `teammate` or `rule` | `teammate`                  |
| `unassign`            | When a conversation is unassigned              | `teammate` or `rule` | -                           |
| `archive`             | When a conversation is archived                | `teammate` or `rule` | -                           |
| `reopen`              | When a conversation is unarchived              | `teammate` or `rule` | -                           |
| `trash`               | When a conversation is deleted                 | `teammate` or `rule` | -                           |
| `restore`             | When a conversation is removed from trash      | `teammate` or `rule` | -                           |
| `comment`             | When a teammate comments on a conversation     | `teammate`           | `comment`                   |
| `mention`             | When a teammate mention another teammate       | `teammate`           | `comment`                   |
| `inbound`             | When an incoming message is received           | `inboxes`            | `message`                   |
| `outbound`            | When an outbound message is sent               | `inboxes`            | `message`                   |
| `move`                | When a conversation is moved                   | `teammate` or `rule` | `inboxes`                   |
| `forward`             | When a message is forwarded                    | `teammate` or `rule` | `message`                   |
| `tag`                 | When a conversation is tagged                  | `teammate` or `rule` | `tag`                       |
| `untag`               | When a conversation is untagged                | `teammate` or `rule` | `tag`                       |
| `sending_error`       | When an inbox cannot send a message            | `recipient`          | `message`                   |
| `reminder`            | When a conversation is reopen by a reminder    | -                    | -                           |
| `out_reply`           | When a reply is sent                           | `inboxes`            | `message`                   |
| `conversations_merged`| When two or more conversations are merged      | `teammate`           | `deleted_conversation_ids`  |

### Event preview

> *Example:*
> Event preview of a rule assigning a conversation to a teammate:

```json
{
    "_links"      : { "self": "https://api2.frontapp.com/events/evt_55c8c149" },
    "id"          : "evt_55c8c149",
    "type"        : "assign",
    "emitted_at"  : 1453770984.123,
    "source"      : {
        "_meta" : { "type": "rule" },
        "_links": { "self": "https://api2.frontapp.com/rules/rul_55c8c149" },
        "id"    : "rul_55c8c149"
    },
    "target"      : {
        "_meta" : { "type": "teammate" },
        "_links": { "self": "https://api2.frontapp.com/teammates/tea_55c8c149" },
        "id"    : "tea_55c8c149"
    },
    "conversation": {
        "_links": {
            "self"   : "https://api2.frontapp.com/conversations/cnv_55c8c149",
            "related": {
                "events"   : "https://api2.frontapp.com/conversations/cnv_55c8c149/events",
                "followers": "https://api2.frontapp.com/conversations/cnv_55c8c149/followers",
                "messages" : "https://api2.frontapp.com/conversations/cnv_55c8c149/messages",
                "comments" : "https://api2.frontapp.com/conversations/cnv_55c8c149/comments",
                "inboxes"  : "https://api2.frontapp.com/conversations/cnv_55c8c149/inboxes"
            }
        },
        "id"    : "cnv_55c8c149"
    }
}
```

When receiving an event from Front (either via a [webhook](#webhooks) or via a [custom inbox](#custom-inboxes) callback), you will receive the preview of the event.
As the callback URL you provided is public, you should not blindly trust any incoming requests. This is why we're sending only a preview of the event.

An event preview has the exact same structure as the full event except that its `source`, `target` and `conversation` only contain an ID, a link to the resource itself and a type.
You can then either request the detailed event or each resources separately by following their respective `_links`.

+ Parameters
    + event_id (string, required) - The ID of the requested event

+ Attributes (Event)

### List events [GET /events{?q,page_token,limit}]

Lists all the detailed events which occured in the inboxes of your company ordered in reverse chronological order (newest first).

<aside class="notice">
  Depending on how active your inboxes are, the events can pile up rather quickly.
  We recommend the use of `before` search parameter to ensure that the events in each page won't change over the time (see <a href="#search-criteria-for-events">Search criteria for events</a>).
</aside>

+ Parameters
    + q (object, optional) - Search query. See Search Parameters
    
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/events` (string, required)
        + _results (array[Event], required) - List of the events

### Get event [GET]

Fetches the full details of an event.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Event)


# Group Analytics
## Analytics [/analytics/{?inbox_ids,tag_ids,start,end,timezone,metrics}]

To get statistics about activities happening in Front, you need to requests the correspondig metrics of the analytics.

Each metrics can be either:

* A scalar: this is a single value (a number, duration, percentage or string).
* A table: this is a set of different values for a set of resources.
* A time graph: this is a unique value decomposed in multiple values over the requested time range.

**Scalar metrics available:**

| Name                          | Type       | Description                                                      |
|-------------------------------|------------|------------------------------------------------------------------|
| `avg_conversations_per_day`   | Number     | Average number of conversations occuring per day                 |
| `avg_first_response_time`     | Duration   | Average time for your teammates to send the first reply          |
| `avg_replies_to_resolve`      | Number     | Average number of replies to resolve a conversation              |
| `avg_resolution_time`         | Duration   | Average time for a conversation to be resolved                   |
| `avg_response_time`           | Duration   | Average time for your teammate to reply to a message             |
| `busiest_day`                 | String     | Name of the day where you receive the most messages              |
| `busiest_time`                | String     | Hour of the day where you receive the most messages              |
| `num_active_conversations`    | Number     | Number of conversation which received at least one message       |
| `num_customers_helped`        | Number     | Number of unique customer with which your teammates interacted   |
| `num_messages_received`       | Number     | Total number of messages received                                |
| `num_new_conversations`       | Number     | Number of new conversations                                      |
| `num_replies_sent`            | Number     | Number of replies sent                                           |
| `pct_resolved_on_first_reply` | Percentage | Percentage of conversations resolved on the first reply          |

**Table metrics available:**

| Name                      | Resource type      | Values                                                                                                                                                                                                         |
|---------------------------|--------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `customers_table`         | List of customers  | Number of messages, average first reply time, average response time and average resolution time                                                                                                                |
| `first_response_histo`    | List of duration   | Percentage of first responses sent for each duration                                                                                                                                                           |
| `resolution_histo`        | List of duration   | Percentage of resolved conversation for each duration                                                                                                                                                          |
| `response_histo`          | List of duration   | Percentage of responses sent for each duration                                                                                                                                                                 |
| `tags_table`              | List of tags       | Number of messages, average number of messages per conversation, number of archived conversations, number of open conversations, total number of conversations                                                 |
| `team_table`              | List of teammates  | Number of conversation, average number of messages per conversation, average time to react to a conversation, number of messages, number of sent messages, number of replies sent, number of messages composed |
| `top_conversations_table` | Top 3 teammates    | Number of conversations                                                                                                                                                                                        |
| `top_reaction_time_table` | Top 3 teammates    | Time to react to a conversation                                                                                                                                                                                |
| `top_replies_table`       | Top 3 teammates    | Number of replies sent                                                                                                                                                                                         |

**Time graph metrics available:**

| Name                      | Description                                                   |
|---------------------------|---------------------------------------------------------------|
| `customers_helped_graph`  | Number of unique customer which received at least one message |
| `first_response_graph`    | Average time for your teammate to send the first reply        |
| `messages_received_graph` | Number of messages received                                   |
| `new_conversations_graph` | Number of new conversations                                   |
| `replies_sent_graph`      | Number of replies sent                                        |
| `resolution_graph`        | Average time to resolve a conversation                        |
| `response_graph`          | Average time for your teammate to reply to a message          |

Each metrics contains the value for the requested time period (in the field named `v`) as well as the value for the previous period (in the field named `p`).

Depending on the date range you request the analytics, it can take some time to process it. This is why you might need to send multiple requests to get the results. To help you estimate the remaining time, the server response will contain a `progress` field containing a number ranging from 0 to 100 which isthe percentage of the analytics processed.

+ Parameters
    + inbox_ids: `alt:address:team@planet-express.com` (array[string], optional) - List of inbox IDs to include in the generated analytics
    + tag_ids (array[string], optional) - List of tag IDs to include in the generated analytics
    + start: `1428889008` (number, required) - Timestamp from which the analytics will start
    + end: `1428889003` (number, required) - Timestamp from which the analytics will end
    + timezone: `America/New_York` (string, optional) - Name of the timezone to format the dates. If omitted, the export will use UTC.
    + metrics: `avg_conversations_per_day, first_response_histo, first_response_graph` (array[string], required) - List of the metrics to include in the analytics

### Get analytics [GET]

Fetches the metrics correspondig to the parameters.

<aside class="notice">
You can fetch the anaytics of a specific team by using the endpoint <code>/teams/{team_id}/analytics</code>.
</aside>

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Analytics)


# Group Exports
## Exports [/exports/{export_id}]

Front can generate exports of your data for a specific timeframe and/or specific inboxes, teammates or tags.

Since an export takes some time to process, it has a `status` which can be either:

* `pending` when the export is still generating
* `done` once the export has been generated
* `failed` in case the generation failed

Once the export has been generated, you can download it with its `url`.

### Format

Exports are formatted as a [CSV](https://en.wikipedia.org/wiki/Comma-separated_values) files. The export will contain 1 line per message received in the given time period.

**If a message appears in multiple inboxes, it will appear once for each inbox**.

Below is table of the field names & descriptions that will be included in the export.

| Name                | Desctiption                                                                                                                                       |
|---------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|
| Message ID          | *(deprecated)* Internal Front ID of the message                                                                                                   |
| Conversation ID     | *(deprecated)* Internal Front ID of the entire conversation                                                                                       |
| Segment             | Segment of the conversation                                                                                                                       |
| Direction           | Either `Inbound` or `Outbound`                                                                                                                    |
| Status              | Status of the conversation: `unassigned`, `assigned`, `archived`, or `trashed`                                                                    |
| Inbox               | Name of the inbox where the message was initially sent. If the message appeared in multiple inboxes, it will appear multiple times.               |
| Message Date        | `YYYY-MM-DD HH:mm:ss` format, in the requested timezone                                                                                           |
| Reaction time       | Time (in seconds) taken to respond or reassign a conversation                                                                                     |
| Resolution time     | Total duration (in seconds) that a contact was kept waiting for a reply from the team during a conversation segment                               |
| Response time       | Duration (in seconds) between an inbound message and the next outbound message in the same conversation                                           |
| Assignee            | Username of the assignee, if any                                                                                                                  |
| Author              | Username of the teammate who replied to the email                                                                                                 |
| Contact name        | Contact's first & last name                                                                                                                       |
| Contact handle      | Contact's email address, twitter handle, or phone number - depending on the source of the message                                                 |
| To                  | Email address of the recipient                                                                                                                    |
| Cc                  | Email address of those CC'ed on the email                                                                                                         |
| Bcc                 | Email address of those BCC'ed on the email                                                                                                        |
| Extract             | Sample of the message                                                                                                                             |
| Tags                | Tags attached to the conversation                                                                                                                 |
| Message API ID      | ID of the message used in the API                                                                                                                 |
| Conversation API ID | ID of the conversation used in the API                                                                                                            |

**Timezone**

All dates in the the export are presented in the same timezone. If the export was requested from the app (by clicking on "Request Export"), it will be in the timezone of the user. If the export is requested with the API, the timezone can be manually defined (or defaults to UTC).

**Response time**

Response time is always calculated from the point of view of a customer: how did it take for your company to reply?

Most of the time, the response time is the difference between an inbound message from a customer and the next reply from your team.

If your team replies several times to the same message, the response time is the time since the previous reply.

**Assignments and Handle time**

Most of the time, only one discussion happens within a conversation. That is: a customer will open a conversation to ask a specific thing and if they want to ask another one, they will open a new discussion.

However, this is not always the case:

* A customer might decide to reply to an existing conversation even if they are asking for something new.
* Several teammates might write in one conversation.

Because of this, Front will compute a **handle time** to the last message if:

* the conversation is reassigned to a different teammate.
* the conversation is inactive for **4 days**.

+ Parameters
    + export_id (string, required) - ID of the requested export

+ Attributes (Export)

### List exports [GET /exports{?page_token,limit}]

Lists all the exports generated in your company.

+ Parameters
    + page_token (string, optional) - Token to use to request the next page
    + limit (number, optional) - Max number of results per page (default 50, maximum 100)
    

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/exports` (string, required)
        + _results (array[Export], required) - List of the exports created

### Get export [GET]

Fetches the information of an export.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Export)

### Create export [POST /exports]

Create a new export in the default team.

<aside class="notice">
You can create a new export in a specific team by using the endpoint <code>/teams/{team_id}/exports</code>.
</aside>

+ Request (application/json)
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json
    + Attributes (Export to create)

+ Response 201 (application/json)
    + Attributes (Export)


# Group Responses
## Responses [/responses/{response_id}]

Responses are predetermined answer to common questions. They allow you to respond faster to inbound messages, and lessen the repetitive nature of replying to frequently asked questions.

Front allows individual and team canned responses. Individual canned responses are visible to only you, and team canned responses can be visible to your teammates on a per inbox level.

+ Parameters
    + response_id (string, required) - Id the requested response

+ Attributes (Response)

### List Responses [GET /responses]

Lists the responses in your company.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes
        + _pagination (object, required) - Pagination object
            + prev (string, optional) - Link to the previous page
            + next (string, optional) - Link to the next page
        
        + _links (object, required) - See [Response body Structure - Links](#links)
        
            + self: `https://api2.frontapp.com/responses` (string, required)
        + _results (array[Response], required) - List of all the responses in your company

### Get response [GET]

Fetches the information of an individual response.

+ Request
    + Headers
    
            Authorization: Bearer {your_token}
            Accept: application/json

+ Response 200 (application/json)
    + Attributes (Response, required)


# Data Structures
## Teammate

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/teammates/tea_55c8c149` (string, required) - URL of the teammate
    + related (object, required)
        + inboxes: `https://api2.frontapp.com/teammates/tea_55c8c149/inboxes` (string, required) - URL of the teammate's inboxes
        + conversations: `https://api2.frontapp.com/teammates/tea_55c8c149/conversations` (string, required) - URL of the teammate's conversation
+ id: `tea_55c8c149` (string, required) - Unique identifier of the teammate
+ email: `leela@planet-express.com` (string, required) - Email address of the teammate
+ username: `leela` (string, required) - Username of the teammate (used for "@" mentions)
+ first_name: `Leela` (string, required) - First name of the teammate
+ last_name: `Turanga` (string, required) - Last name of the teammate
+ is_admin: `true` (boolean, required) - Whether or not the teammate is an admin in your company
+ is_available: `true` (boolean, required) - Whether or not the teammate is available
+ is_blocked: `false` (boolean, required) - Whether or not the teammate account has been blocked

## Teammate to update

+ username: `bender` (string, optional) - New username. It must be unique and can only contains lowercase letters, numbers and underscores.
+ first_name: `Bender` (string, optional) - New first name
+ last_name: `Rodriguez` (string, optional) - New last name
+ is_available: `false` (boolean, optional) - New availability status

## Inbox to create

+ name: `Delivery support` (string, required) - Name of the inbox
+ teammate_ids (array[string], optional) - List of all the teammate ids who will have access to this inbox. If omitted, it will automatically select all the team administrators.

## Created inbox

+ id: `inb_55c8c149` (string, required) - Unique identifier for the inbox
+ name: `Delivery support` (string, required) - Name of the inbox

## Inbox

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/inboxes/inb_55c8c149` (string, required) - URL of the inbox
    + related (object, required)
        + teammates: `https://api2.frontapp.com/inboxes/inb_55c8c149/teammates` (string, required) - URL of the list of teammates that can access the inbox
        + conversations: `https://api2.frontapp.com/inboxes/inb_55c8c149/conversations` (string, required) - URL of the list of conversations included in this inbox
        + channels: `https://api2.frontapp.com/inboxes/inb_55c8c149/channels` (string, required) - URL of the list of channels sending messages to this inbox
        + owner: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team of teammate of the inbox
+ id: `inb_55c8c149` (string, required) - Unique identifier for the inbox
+ name: `Team` (string, required) - Name of the inbox
+ is_private: `false` (boolean, required) - Whether or not the inbox is individual

## Conversation

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/conversations/cnv_55c8c149` (string, required) - URL of the conversation
    + related (object, required)
        + events: `https://api2.frontapp.com/conversations/cnv_55c8c149/events` (string, required) - URL of the activities related to the conversation
        + followers: `https://api2.frontapp.com/conversations/cnv_55c8c149/followers` (string, required) - URL of the teammates following the conversation
        + messages: `https://api2.frontapp.com/conversations/cnv_55c8c149/messages` (string, required) - URL of the list of messages in the conversation
        + comments: `https://api2.frontapp.com/conversations/cnv_55c8c149/comments` (string, required) - URL of the comments for the conversation
        + inboxes: `https://api2.frontapp.com/conversations/cnv_55c8c149/inboxes` (string, required) - URL of the inboxes in which the conversation appears
+ id: `cnv_55c8c149` (string, required) - Unique identifier of the conversation
+ subject: `You broke my heart, Hubert.` (string, required) - Subject of the conversation
+ status (enum[string], optional) - Status of the conversation
    + Members
        + `archived`
        + `unassigned`
        + `deleted`
        + `assigned`
+ assignee (Teammate, optional) - Partial representation of the teammate assigned to the conversation
+ recipient (Recipient, required) - Main recipient of the conversation
+ tags (array[Tag], required) - List of the tags for this conversation
+ last_message (Message, required) - List of partial representation of the messages inside the conversation
+ created_at: `1453770984.123` (number, required) - Timestamp at which the conversation have been created.
+ is_private: `false` (boolean, required) - Whether or not the conversation is private

## Conversation to update

+ assignee_id: `alt:email:fry@planet-express.com` (string, optional) - ID of the teammate to assign the conversation to. Set it to null to unassign.
+ inbox_id: `inb_128yew` (string, optional) - ID of the inbox to move the conversation to.
+ status (enum[string], optional) - New status of the conversation
    + Members
        + `archived`
        + `open`
        + `deleted`
        + `spam`
+ tag_ids (array[string], optional) - List of all the tag IDs replacing the old conversation tags
    + `tag_55c8c148`
    + `tag_55c8c149`


## Conversation to put

+ assignee_id: `null` (string, required) - ID of the teammate to assign the conversation to. Set it to null to unassign.

## Message

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/messages/msg_55c8c149` (string, required) - URL of the message
    + related (object, required)
        + conversation: `https://api2.frontapp.com/conversations/cnv_55c8c149` (string, required) - URL of the parent conversation
        + message_replied_to: `https://api2.frontapp.com/messages/msg_1ab23cd4` (string, optional) - URL of the message which have been replied to
+ id: `msg_55c8c149` (string, required) - Unique identifier of the message
+ type (enum[string], required) - Type of the message
    + Members
        + `email`
        + `tweet`
        + `sms`
        + `smooch`
        + `facebook`
        + `intercom`
        + `truly-call`
        + `custom`
+ is_inbound: `true` (boolean, required) - Whether or not the message has been received or sent
+ is_draft: `false` (boolean, required) - Whether or not the message is a draft
+ error_type (string, optional) - Type of the error when the draft failed to be sent
+ created_at: `1453770984.123` (number, required) - Date at which the message as been sent or received
+ blurb: `Anything less than immortality is a...` (string, required) - Preview of the message body
+ author (Teammate, optional) - In case of a message sent from Front by a teammate, it will include the teammate who sent it
+ recipients (array[Recipient], required) - List of the message recipients
+ body: `Anything less than immortality is a complete waste of time.` (string, required) - Body of the message
+ text: `Anything less than immortality is a complete waste of time.` (string, optional) - Text version of the body for email messages
+ attachments (array[Attachment], required) - List of files attached to the message
+ metadata (object, optional) - Optional metadata about the message
    + intercom_url (string, optional) - For `intercom` messages only. URL of the Intercom conversation the message is comming from.
    + duration (number, optional) - For `truly-call` messages only. Length of the call in seconds.
    + have_been_answered (boolean, optional) - For `truly-call` messages only. Whether or not the call have been answered.
    + twitter_url (string, optional) - For `tweet` messages only. URL of the tweet.
    + is_retweet (boolean, optional) - For `tweet` messages only. Whether or not the tweet is a retweet.
    + have_been_retweeted (boolean, optional) - For `tweet` messages only. Whether or not the tweet have been retweeted.
    + have_been_favorited (boolean, optional) - For `tweet` messages only. Whether or not the tweet have been favorited.
    + thread_ref (string, optional) - For `custom` messages only. Custom reference which is used to thread messages.
    + headers (object, optional) - For `custom` messages only. Custom object holding internal information.

## Outbound message

+ author_id: `alt:email:leela@planet-exress.com` (string, optional) - ID of the teammate on behalf of whom the answer is sent
+ sender_name: `Leela` (string, optional) - Name used for the sender info of the message
+ subject: `Good news everyone!` (string, optional) - Subject of the message for email message
+ body: `Why is Zoidberg the only one still alone?` (string, required) - Body of the message
+ text: `Why is Zoidberg the only one still alone?` (string, optional) - Text version of the body for messages with non-text body
+ attachments (array[], optional) - Binary data of the attached files. Available only for [multipart request](#send-multipart-request).
+ options (object, optional) - Sending options
    + tags (array[string], optional) - List of tag names to add to the conversation (unknown tags will automatically be created)
    + archive: `true` (boolean, optional) - Archive the conversation right when sending the message
        + Default: `true`

## Draft
+ Include Message
+ is_inbound: `false` (boolean, required)
+ is_draft: `true` (boolean, required)
+ blurb: `Why is Zoidberg the only one still...` (string, required)
+ body: `Why is Zoidberg the only one still alone?` (string, required)
+ text: `Why is Zoidberg the only one still alone?` (string, optional)
+ attachments (array[], optional)

## Outbound new message

+ Include Outbound message
+ to: `calculon@momsbot.com` (array[string], required) - List of the recipient handles who will receive this message
+ cc (array[string], optional) - List of the recipient handles who will receive a copy of this message
+ bcc (array[string], optional) - List of the recipient handles who will receive a blind copy of this message

## Outbound reply

+ Include Outbound message
+ `channel_id`: `cha_55c8c149` (string, optional) - Channel through which to send the message. Defaults to the original conversation channel. For imported messages or messages received on multiple channels, you **MUST** specify a channel ID.
+ to (array[string], optional) - List of the recipient handles who will receive this message. By default it will use the recipients of the last received message.
+ cc (array[string], optional) - List of the recipient handles who will receive a copy of this message. By default it will use the cc'ed recipients of the last received message.
+ bcc (array[string], optional) - List of the recipient handles who will receive a blind copy of this message

## Custom message

+ sender (object, required) - Data of the sender
    + contact_id (string, optional) - ID of the contact in Front corresponding to the sender
    + name: `hermes` (string, optional) - Name of the sender
    + handle: `hermes_123` (string, required) - Handle of the sender. It can be any string used to uniquely identify the sender
+ subject: `Question` (string, optional) - Subject of the message
+ body: `Didn't we used to be a delivery company?` (string, required) - Body of the message
+ body_format: `markdown` (enum[string], optional, default) - Format of the message body.
     + `html`
     + `markdown`
+ attachments (array[], optional) - Binary data of the attached files. Available only for [multipart request](#send-multipart-request).
+ metadata (object, optional)
    + thread_ref (string, optional) - Custom reference which will be used to thread messages. If you omit this field, we'll thread by sender instead
    + headers (object, optional) - Custom object where any internal information can be stored

## Message to import

+ sender (object, required)
  + handle: `calculon@momsbot.com` (string, required) - Handle used to reach the contact. Can be an email address, a twitter, handle, a phone number, ...
  + name (string, optional) - Name of the contact.
  + author_id (string, optional) - ID of the teammate who is the author of the message. Ignored if the message is inbound.
+ to (array[string], required) - List of recipient handles who received the message.
+ cc (array[string], optional) - List of recipient handles who received a copy of the message.
+ bcc (array[string], optional) - List of the recipeient handles who received a blind copy of the message.
+ subject (string, optional) - Subject of the message.
+ body (string, required) - Body of the message.
+ body_format: `markdown` (enum[string], optional, default) - Format of the message body. Ignored if the message type is not `email`.
     + `html`
     + `markdown`
+ external_id (string, required) - External identifier of the message. Front won't import two messages with the same external ID.
+ created_at: `1453770984.123` (number, required) - Date at which the message as been sent or received.
+ type: `email` (enum[string], optional, default) - Type of the message to import.
     + `email`
     + `sms`
     + `intercom`
     + `custom`
+ assignee_id (string, optional) - ID of the teammate who will be assigned to the conversation.
+ tags (array[string], optional) - List of tag names to add to the conversation (unknown tags will automatically be created).
+ attachments (array[], optional) - Binary data of the attached files. Available only for [multipart request](#send-multipart-request).
+ metadata (object, required)
    + thread_ref (string, optional) - Custom reference which will be used to thread messages. If you omit this field, we'll thread by sender instead.
    + is_inbound: `true` (boolean, required) - Whether or not the message is received (inbound) or sent (outbound) by you.
    + is_archived: `true` (boolean, optional) - Whether or not the message should be directly archived once imported.
        + Default: `true`
    + should_skip_rules: `true` (boolean, optional) - Whether or not the rules should apply to this message.
        + Default: `true`

## Accepted message

+ message_uid: `3b1q41d8` (string, required) - UID of the message that will be created.

## Recipient

+ _links (object, required) - See [Response body Structure - Links](#links)

    + related (object, required)
        + contact: `https://api2.frontapp.com/contacts/crd_55c8c149` (string, optional) - URL of the contact associated to the recipient.
+ handle: `calculon@momsbot.com` (string, required) - Handle used to contact the recipient (can be an email address, a twitter handle, ...)
+ role (enum[string], required) - Role of the recipient. Can be either "to", "cc" or "bcc"
    + Members
        + `to`
        + `cc`
        + `bcc`

## Event

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/events/evt_55c8c149` (string, required) - URL of the event
+ id: `evt_55c8c149` (string, required) - Unique identifier of the event
+ type (enum[string], required) - Type of event
    + Members
        + `assign`
        + `unassign`
        + `archive`
        + `reopen`
        + `trash`
        + `restore`
        + `comment`
        + `inbound`
        + `outbound`
        + `move`
        + `forward`
        + `tag`
        + `untag`
        + `sending_error`
+ emitted_at: `1453770984.123` (number, required) - Date at which the event has been emitted
+ source (object, required) - The event's source
    + _meta (object, required) - Metadata about the resource
        + type (enum[string], required)
            + Members
                + `rule`
                + `teammate`
                + `api`
                + `imap`
                + `reminder`
                + `inboxes`
    + data (enum, optional) - The resource which triggered the event
        + (Rule) - Rule which triggered the event
        + (Teammate) - Teammate which triggered the event
        + (array[Inbox]) - List of the inboxes on which the event occured
+ target (object) - Partial representation (type & id) of the event's target
    + _meta (object, required) - Metadata about the resource
        + type (enum[string], required)
            + Members
                + `teammate`
                + `inbox`
                + `tag`
                + `comment`
                + `message`
    + data (enum, optional) - The resource which received the event
        + (Teammate) - Teammate targetted by the event
        + (Inbox) - Inbox targetted by the event
        + (Tag) - Tag targetted by the event
        + (Comment) - Comment targetted by the event
        + (Message) - Message targetted by the event
+ conversation (Conversation, required) - The conversation on which the event happened

## Comment

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/comments/inb_55c8c149` (string, required) - URL of the comment
    + related (object, required)
        + conversation: `https://api2.frontapp.com/conversations/cnv_55c8c149` (string, required) - URL of the conversation from which the comment belongs
        + mentions: `https://api2.frontapp.com/comments/com_55c8c149/mentions` (string, required) - URL of the teammates mentionned in a comment
+ id: `com_55c8c149` (string, required) - Unique identifier of the comment
+ author (Teammate, required) - Teammate who wrote the comment
+ body: `@bender, I thought you were supposed to be cooking for this party.` (string, required) - Content of the comment
+ posted_at: `1453770984.123` (number, required) - Date at which the comment have been posted

## Comment to create

+ author_id: `alt:email:leela@planet-express.com` (string, required) - ID of the teammate creating the comment
+ body: `@bender, I thought you were supposed to be cooking for this party.` (string, required) - Content of the comment

## Attachment

+ filename: `attachment.jpg` (string, required) - Name of the attached file
+ url: `https://api2.frontapp.com/download/fil_55c8c149` (string, required) - URL to download the attached file
+ content_type: `image/jpeg` (string, required) - Content type of the attached file
+ size: `10000` (number, required) - Size (in byte) of the attached file
+ metadata (object)
  + is_inline: `true` (boolean, required) - Whether or not the attachment is part of the message body
  + cid: `123456789` (string, optional) - Unique identifier used to link an attachment to where it is used in the message body

## Contact

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/contacts/crd_55c8c149` (string, required) - URL of the contact
    + related (object, required)
        + notes: `https://api2.frontapp.com/contacts/crd_55c8c149/notes` (string, required) - URL to list the notes associated to the contact
        + conversations: `https://api2.frontapp.com/contacts/crd_55c8c149/conversations` (string, required) - URL to list the URL associated to the contact
        + owner: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team or teammate of the contact
+ id: `crd_55c8c149` (string, required) - Unique identifier of the contact
+ name: `Calculon` (string, required) - Contact name
+ description: `#vip #robot #RIP` (string, required) - Contact description
+ avatar_url: `http://example.com/calculon.jpg` (string, required) - URL of the contact's avatar
+ is_spammer: `true` (boolean, required) - Whether or not the contact is a spammer
+ links (array[string], required) - A set of URL associated to the contact
    + `http://example.com`
+ handles (array[Contact handle], required) - List of the handles and sources with which the contact is reachable.
+ groups (array[Contact group], required) - List of the groups the contact belongs to.
+ updated_at (number) - Timestamp of the last update
+ custom_fields (object, required)
    + job title: `engineer` (string, required)
    + custom field name: `your value` (string, required)
+ is_private: `false` (boolean, required) - Whether or not the contact is individual


## Contact to update

+ name: `Calculon` (string, optional) - Contact name
+ description: `#vip #robot #RIP` (string, optional) - Contact description
+ avatar (string, optional) - Binary data of the image to use as the contact avatar. Available only for [multipart request](#send-multipart-request).
+ is_spammer: `true` (boolean, optional) - Whether or not the contact is marked as a spammer
+ links (array[string], optional) - List of all the links of the contact
    + `http://example.com`
+ group_names (array[string], optional) - List of all the group names the contact belongs to. It will automatically create missing groups.
    + `Customers`
+ custom_fields (object, optional) - Custom field attributes for this contact. Leave empty if you do not wish to update the attributes. Not sending existing attributes will automatically remove them.
    + job title: `engineer` (string, required) - A custom field name defined in your company custom fields
    + custom field name: `your value` (string, required) - A custom field name defined in your company custom fields

## Contact to create

+ Include Contact to update
* handles (array[Contact handle], required) - List of the contact handles

## Contact handle

+ handle: `@calculon` (string, required) - Handle used to reach the contact. Can be an email address, a twitter, handle, a phone number, ...
+ source (enum[string], required) - Can be 'twitter', 'email' or 'phone'.
    + Members
        + `twitter`
        + `email`
        + `phone`
        + `facebook`

## Contact handle to delete

+ Include Contact handle
+ force (boolean, optional) - Force the deletetion of the contact if the handle is the last one (Defaults to `false`)

## Contact note

+ author (Teammate, required) - Teammate who wrote the note
+ body: `Calculon is a celebrated actor` (string, required) - Content of the note
+ created_at: `1453770984.123` (number, required) - Date at which the note have been created

## Contact note to create

+ author_id: `alt:email:leela@planet-express.com` (string, required) - ID of the teammate creating the note
+ body: `Calculon is a celebrated actor` (string, required) - Content of the note

## Contact group

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/contacts/grp_55c8c149` (string, required) - URL of the group
    + related (object, required)
        + contacts: `https://api2.frontapp.com/contact_groups/grp_55c8c149/contacts` (string, required) - URL to list of contacts in the group
        + owner: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team or teammate of the contact group
+ id: `grp_55c8c149` (string, required) - Unique identifier of the group
+ Include Contact group to create
+ is_private: `false` (boolean, required) - Whether or not the contact is individual

## Contact group to create

+ name: `Customers` (string, required) - Name of the group

## Contact IDs

+ contact_ids (array[string], required) - List of ids or aliases of the contacts to add in the requested group
    + `crd_55c8c149`
    + `alt:email:calculon@momsbot.com`

## Tag

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/tags/tag_55c8c149` (string, required) - URL of the tag
    + related (object, required)
        + conversations: `https://api2.frontapp.com/tags/tag_55c8c149/conversations` (string, required) - URL of the list of conversations tagged with this tag
        + owner: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team or teammate of the tag
        + parent_tag: `https://api2.frontapp.com/tags/tag_55c8c140` (string, optional) - URL of the parent tag
        + children: `https://api2.frontapp.com/tags/tag_55c8c149/children` (string, optional) - URL of the list of the tag's child tags
+ id: `tag_55c8c149` (string, required) - Unique identifier of the tag
+ name: `Robots` (string, required) - Name of the tag
+ highlight: `blue` (enum, required) - Highlight color of the tag. Can be one of: `grey`, `pink`, `red`, `orange`, `yellow`, `green`, `blue`, `blue` or `purple`.
+ is_private: `false` (boolean, required) - Whether or not the tag is individual
+ created_at (number) - Timestamp of tag create creation
+ updated_at (number) - Timestamp of the last tag update

## Tag to create

+ name: `Robots` (string, required) - Name of the tag to create.
+ highlight: `blue` (enum, optional) - Color to highlight the tag with. Can be one of: `grey`, `pink`, `red`, `orange`, `yellow`, `green`, `blue`, `blue` or `purple`.

## Tag to update
+ name: `Robots` (string, optional) - Name of the tag to create.
+ highlight: `blue` (string, optional) - Color to highlight the tag with. Set to `null` to remove highlighting.
+ parent_tag_id: `tag_55c8c148` (string, optional) - ID of the parent of this tag. Set to `null` to remove the parent tag.

## Rule

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/rules/rul_55c8c149` (string, required) - URL of the rule
    + related (object, required)
        + owner: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team of teammate for which the rule is defined
+ id: `rul_55c8c149` (string, required) - Unique identifier of the rule
+ name: `Important deliveries` (string, required) - Name of the rule
+ actions (array[string], required) - List of the rule's actions description
    + `Assign to Leela Turanga`
+ is_private: `false` (boolean, required) - Whether or not the rule is individual

## Export

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/exports/exp_55c8c149` (string, required) - URL of the export URL
+ id: `exp_55c8c149` (string, required) - Unique identifier for the export.
+ status: `running` (enum[string], required, default) - Status of the export.
     + `running`
     + `pending`
     + `done`
     + `failed`
+ progress: `42` (number, required) - Number ranging from 0 to 100 corresponding to the percentage of the export processed.
+ url: `http://exports.frontapp.com/planet-express/export.csv` (string, optional) - URL of the generated export. Will be null until the status is "done".
+ filename: `export.csv` (string, optional) - Name of the file of the generated export. Will be null until the status is "done".
+ size: `1000` (number, required) - Size (in bytes) of the export file.
+ created_at: `1453770984.123` (number, required) - Date at which the export has been created.
+ query (Export to create, required) - Query data used to generate the export.

## Export to create

+ inbox_id: `alt:address:team@planet-express.com` (string, optional) - ID of the inbox to export the analytics for. If omitted, the export will contain all the inboxes.
+ tag_id: `tag_55c8c149` (string, optional) - ID the tag to export the analytics for. If omitted, the export will contain all the tags.
+ start: `1428889003` (number, required) - Start time of the data to include in the export.
+ end: `1428889008` (number, required) - End time of the data to include in the export.
+ timezone: `America/New_York` (string, optional) - Name of the timezone to format the dates. If omitted, the export will use UTC.
+ should_export_events: `false` (boolean, optional) - Whether to export all the events or  only messages. Default to `false`.

## Analytics

+ status: `pending` (enum[string], required) - Status of the processing of the analytics.
    + `pending`
    + `done`
    + `failed`
+ progress: `42` (number, required) - Number ranging from 0 to 100 corresponding to the percentage of the analytics processed.
+ metrics (array, required) - List of the metrics required.
    + (Scalar metric)
    + (Table metric)
    + (Time graph metric)

## Scalar metric

+ id: `avg_conversations_per_day` (string, required) - Id of the metric
+ metric_type: `scalar` (string, required) - Type of the metric
+ Include Metric value

## Table metric

+ id: `first_response_histo` (string, required) - Id of the metric
+ metric_type: `table` (string, required) - Type of the metric
+ columns (array, required) - Columns of the table
    + (object)
        + id: `time` (string, required) - Id of the column
        + label: `Time` (string, required) - Label of the column
        + type (Metric type, required) - Type of the values in the column
    + (object)
        + id: `pct_replies` (string, required) - Id of the column
        + label: `Replies %` (string, required) - Label of the column
        + type (Metric type, required) - Type of the values in the column
+ rows (array, required) - Rows of the table
    + (array)
        + (Metric value)
            + t: `str`
            + v: `< 15mn`
            + p: `< 15mn`
        + (Metric value)
            + t: `pct`
            + v: `12`
            + p: `50`

## Time graph metric

+ id: `first_response_graph` (string, required) - Id of the metric
+ metric_type: `time_graph` (string, required) - Type of the metric
+ vals (array, required) - Values for each time intervals
    + (Metric value)
        + t: `dur`
        + label: `January` (string, required) - Label of the time interval
        + start: `1451785860` (number, required) - Start of the interval
        + end: `1454464260` (number, required) - End of the interval

## Metric type (enum)

+ `num` - For a numeric value
+ `dur` - For a duration value
+ `str` - For a string value
+ `pct` - For a percentage value

## Metric value

+ t (Metric type, required) - Type of the value
+ v: `42` (number, required) - Value for the requested time period
+ p: `24` (number, required) - Value for the previous time period

## Channel

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/channels/cha_55c8c149` (string, required) - URL of the channel.
    + related (object, required)
        + inbox: `https://api2.frontapp.com/channels/cha_55c8c149/inbox` (string, required) - URL of the inbox to which the channel is sending messages.
        + owner: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team of teammate of the channel
+ id: `cha_55c8c149` (string, required) - Unique identifier for the channel.
+ address: `team@planet-express.com` (string, required) - Address receiving the messages.
+ type (enum[string], required) - Type of the channel.
    + Members
        + `smtp`
        + `imap`
        + `twilio`
        + `twitter`
        + `facebook`
        + `smooch`
        + `intercom`
        + `truly`
        + `custom`
+ send_as: `team@planet-express.com` (string, optional) - Address which appears as the sender for messages sent from Front.
+ settings (object, required)
+ is_private: `false` (boolean, required) - Whether or not the channel is individual

## Channel settings

+ settings (object, required)
  + webhook_url: `http://example.com` (string, optional) - `custom` type only. URL to which will be sent the replies of a custom message.
  + reply_mode: `unsupported` (enum, optional) - How the channel can be used to reply to a message.
  + compose_mode: `normal` (enum, optional) - Grants ability to compose new messages from this channel (`normal`) or prevents composing new messages (`unsupported`). Can be one of: `normal` or `unsupported`. (Default: `unsupported`)
  + contact_type: `email` (enum, optional) - Contact type the channel uses. It can only be set on channel creation. Can be one of: `custom`, `email` or `phone`. (Default: `custom`)

## Channel to create

+ name: `My channel` (string, optional) - Name of the channel.
+ type (enum[string], required) - Type of the channel.
    + Members
        + `custom`
+ Include Channel settings

## Channel created

+ id: `cha_55c8c149` (string, required) - Unique identifier for the channel.
+ Include Channel to create
+ address: `dw0a0b7aeg36cb56` - Address receiving the messages.
+ sendAs: `dw0a0b7aeg36cb56` - Address which appears as the sender for messages sent from Front.
+ Include Channel settings

## Channel to update
+ name: `My channel` (string, optional) - Name of the channel.
+ settings (object, optional) - Settings to replace.

## Topic

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/topics/top_55c8c149` (string, required) - URL of the topic
    + related (object, required)
        + conversations: `https://api2.frontapp.com/topics/top_55c8c149/conversations` (string, required) - URL of the list of conversations associated to this topic
+ id: `top_55c8c149` (string, required) - Unique identifier of the topic
+ name: `GitHub hub pages` (string, required) - Name of the topic
+ url: `https://github.com/github/hub/issues/1` (string, required) - URL of the topic

## Custom field

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/conversations/fld_55c8c149` (string, required) - URL of the custom field
+ id: `fld_55c8c149` (string, required) - Unique identifier of the custom field
+ name: `job_title` (string, required) - Name of the custom field
+ description: `Job title` (string, required) - Description of the custom field
+ type (enum[string], required) - Type of the custom field
    + Members
        + `string`
        + `boolean`
        + `datetime`
        + `number`

## Custom field to update

+ name: `job_title` (string, optional) - The name of the custom field. This name will be used in the custom field attribute key of the contact.
+ description: `Job title` (string, optional) - The description of the custom field.

## Team

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/teams/tim_55c8c149` (string, required) - URL of the team details
+ id: `tim_55c8c149` (string, required) - Unique identifier of the topic
+ name: `Delivery` (string, required) - Name of the team

## Team details

+ Include Team
+ inboxes (array[Inbox], required) - List of the inboxes in the team
+ members (array[Teammate], required) - List of the teammates that have access to the team

## Response

+ _links (object, required) - See [Response body Structure - Links](#links)

    + self: `https://api2.frontapp.com/responses/rsp_42` (string, required) - URL of the response
+ id: `rsp_42` (string, required) - Unique identifier of the response
+ name: `My canned response` (string, required) - Name of the repsonse
+ subject: `Dogs in here` (string, required) - Subject of the repsonse
+ body: `I heard there were dogs in here.` (string, required) - Body of the response
+ attachments (array[Attachment]) - List of files attached to the response
+ created_at (number) - Timestamp of response creation
+ updated_at (number) - Timestamp of the last update
