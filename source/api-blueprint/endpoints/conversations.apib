## Conversations [/conversations/{conversation_id}]

A conversation is a unique thread of messages. It can appear in one or more inboxes (eg: if you receive an email on contact@ where support@ is Cced).

Even if a conversation messages can have multiple recipients, the conversation resource will always have only one. The main recipient of a conversation can change over the time depending on each message received. It will generally be the sender of the last incomming message.

### Opening a conversation in Front

To open a conversation in Front you need to open the URL `https://app.frontapp.com/open/{conversation_id}`.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Attributes (Conversation)

### List conversations [GET /conversations{?q,page_token,limit}]

Lists all the conversations in your company in reverse chronological order (most recently updated first).

+ Parameters
    <!-- include(../includes/query_parameter.apib) -->
    <!-- include(../includes/pagination_parameter.apib) -->

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/pagination_attribute.apib) -->
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/conversations` (string, required)
        + _results (array[Conversation], required) - Array of the conversations

### Get conversation [GET]

Fetches the information of a conversation.

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes (Conversation)

### Update conversation [PATCH]

Updates a conversation. You can:

* Assign or unassign a conversation by sending an `assignee_id`
* Update the tags of a conversation by sending an array of tag IDs `tag_ids`. An empty array will remove all tags.
* Archive a conversation by sending `archived` in `status`
* Delete a conversation by sending `deleted` in `status`
* Mark a conversation as spam by sending `spam` in `status`
* Unarchive or restore a conversation  by sending `open` in `status`

+ Request (application/json)
    <!-- include(../includes/request_header.apib) -->
    + Attributes (Conversation to update)

+ Response 204

### List conversation inboxes [GET /conversations/{conversation_id}/inboxes]

Lists the inboxes in which a conversation appears.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/inboxes` (string, required)
        + _results (array[Inbox], required) - List of the conversation inboxes

### List conversation followers [GET /conversations/{conversation_id}/followers]

Lists the teammates following a conversation.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/followers` (string, required)
        + _results (array[Teammate], required) - List of the conversation followers

### List conversation events [GET /conversations/{conversation_id}/events{?page_token,limit}]

List of all the events that occured for a conversation in reverse chronological order (newest first).

+ Parameters
     <!-- include(../includes/pagination_parameter.apib) -->
     + conversation_id (string, required) - Id of the requested conversation

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/pagination_attribute.apib) -->
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/events` (string, required)
        + _results (array[Event], required) - List of the conversation activities

### List conversation messages [GET /conversations/{conversation_id}/messages{?page_token,limit}]

Lists all the messages sent or received in a conversation in reverse chronological order (newest first).

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation
    <!-- include(../includes/pagination_parameter.apib) -->

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/pagination_attribute.apib) -->
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/messages` (string, required)
        + _results (array[Message], required) - List of the conversation messages

## Comments [/conversations/{conversation_id}/comments]

A comment is a private message written by a teammate visible only to the other teammates. It is never sent and cannot be shared outside of Front.

+ Parameters
    + conversation_id (string, required) - Id of the requested conversation

+ Attributes (Comment)

### Create comment [POST]

Adds a comment to a conversation.

+ Request (application/json)
    <!-- include(../includes/request_header.apib) -->
    + Attributes (Comment to create)

+ Response 201 (application/json)
    + Attributes (Comment)

### List conversation comments [GET]

Lists of all the comments written in a conversation in reverse chronological order (newest first).

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/conversations/cnv_55c8c149/comments` (string, required)
        + _results (array[Comment], required) - List of comments


### Get comment [GET /comments/{comment_id}]

Fetches the information of a comment.

+ Parameters
    + comment_id (string, required) - Id of the comment

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes (Comment)

### List comment mentions [GET /comments/{comment_id}/mentions]

Lists the teammates mentionned in a comment.

+ Parameters
    + comment_id (string, required) - Id of the comment

+ Request
    <!-- include(../includes/request_header.apib) -->

+ Response 200 (application/json)
    + Attributes
        <!-- include(../includes/links_attribute.apib) -->
            + self: `https://api2.frontapp.com/comments/com_55c8c149/mentions` (string, required)
        + _results (array[Teammate], required) - List of teammates
